apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
//    buildToolsVersion "23.0.3"


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            reset()
//            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
//            include "armeabi-v7a", "x86", "arm64-v8a", "x86-64"
            include "armeabi"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation "com.facebook.react:react-native:+"  // From node_modules

    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
//    implementation "com.android.support:appcompat-v7:23.0.3"

    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation files('libs/zkandroidcore.jar')
    implementation files('libs/zkandroidnidfpsensor.jar')
    implementation files('libs/dpuareu.jar')
}
